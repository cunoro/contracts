/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { ethers } from "ethers";
import {
  FactoryOptions,
  HardhatEthersHelpers as HardhatEthersHelpersBase,
} from "@nomiclabs/hardhat-ethers/types";

import * as Contracts from ".";

declare module "hardhat/types/runtime" {
  interface HardhatEthersHelpers extends HardhatEthersHelpersBase {
    getContractFactory(
      name: "CunoroBondDepository",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.CunoroBondDepository__factory>;
    getContractFactory(
      name: "BondTeller",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.BondTeller__factory>;
    getContractFactory(
      name: "CunoroAuthority",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.CunoroAuthority__factory>;
    getContractFactory(
      name: "CunoroERC20Token",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.CunoroERC20Token__factory>;
    getContractFactory(
      name: "GNORO",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.GNORO__factory>;
    getContractFactory(
      name: "GNOROInterface",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.GNOROInterface__factory>;
    getContractFactory(
      name: "GovernorAlpha",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.GovernorAlpha__factory>;
    getContractFactory(
      name: "SNOROInterface",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.SNOROInterface__factory>;
    getContractFactory(
      name: "TimelockInterface",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.TimelockInterface__factory>;
    getContractFactory(
      name: "GovernorNOROegaDelegate",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.GovernorNOROegaDelegate__factory>;
    getContractFactory(
      name: "GovernorNOROegaDelegator",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.GovernorNOROegaDelegator__factory>;
    getContractFactory(
      name: "GNOROInterface",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.GNOROInterface__factory>;
    getContractFactory(
      name: "GovernorAlpha",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.GovernorAlpha__factory>;
    getContractFactory(
      name: "GovernorNOROegaDelegateStorageV1",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.GovernorNOROegaDelegateStorageV1__factory>;
    getContractFactory(
      name: "GovernorNOROegaDelegatorStorage",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.GovernorNOROegaDelegatorStorage__factory>;
    getContractFactory(
      name: "GovernorNOROegaEvents",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.GovernorNOROegaEvents__factory>;
    getContractFactory(
      name: "SNOROInterface",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.SNOROInterface__factory>;
    getContractFactory(
      name: "TimelockInterface",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.TimelockInterface__factory>;
    getContractFactory(
      name: "Timelock",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.Timelock__factory>;
    getContractFactory(
      name: "IBondingCalculator",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IBondingCalculator__factory>;
    getContractFactory(
      name: "ICunoroAuthority",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ICunoroAuthority__factory>;
    getContractFactory(
      name: "IDistributor",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IDistributor__factory>;
    getContractFactory(
      name: "IERC20",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC20__factory>;
    getContractFactory(
      name: "IERC20Metadata",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC20Metadata__factory>;
    getContractFactory(
      name: "IERC20Permit",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC20Permit__factory>;
    getContractFactory(
      name: "IgNORO",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IgNORO__factory>;
    getContractFactory(
      name: "IGovernable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IGovernable__factory>;
    getContractFactory(
      name: "IGuardable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IGuardable__factory>;
    getContractFactory(
      name: "IJoeERC20",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IJoeERC20__factory>;
    getContractFactory(
      name: "IJoeFactory",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IJoeFactory__factory>;
    getContractFactory(
      name: "IJoePair",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IJoePair__factory>;
    getContractFactory(
      name: "IJoeRouter01",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IJoeRouter01__factory>;
    getContractFactory(
      name: "IJoeRouter02",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IJoeRouter02__factory>;
    getContractFactory(
      name: "INORO",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.INORO__factory>;
    getContractFactory(
      name: "IOracle",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IOracle__factory>;
    getContractFactory(
      name: "IOwnable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IOwnable__factory>;
    getContractFactory(
      name: "IsNORO",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IsNORO__factory>;
    getContractFactory(
      name: "IStaking",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IStaking__factory>;
    getContractFactory(
      name: "IStakingV1",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IStakingV1__factory>;
    getContractFactory(
      name: "ITeller",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ITeller__factory>;
    getContractFactory(
      name: "ITreasury",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ITreasury__factory>;
    getContractFactory(
      name: "ITreasuryV1",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ITreasuryV1__factory>;
    getContractFactory(
      name: "IUniswapV2ERC20",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IUniswapV2ERC20__factory>;
    getContractFactory(
      name: "IUniswapV2Pair",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IUniswapV2Pair__factory>;
    getContractFactory(
      name: "IUniswapV2Router",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IUniswapV2Router__factory>;
    getContractFactory(
      name: "IWarmup",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IWarmup__factory>;
    getContractFactory(
      name: "IwsNORO",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IwsNORO__factory>;
    getContractFactory(
      name: "CrossChainMigrator",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.CrossChainMigrator__factory>;
    getContractFactory(
      name: "CunoroTokenMigrator",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.CunoroTokenMigrator__factory>;
    getContractFactory(
      name: "IMigrator",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IMigrator__factory>;
    getContractFactory(
      name: "LiquidityMigrator",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.LiquidityMigrator__factory>;
    getContractFactory(
      name: "AccessControlledMock",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.AccessControlledMock__factory>;
    getContractFactory(
      name: "DAI",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.DAI__factory>;
    getContractFactory(
      name: "IDAI",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IDAI__factory>;
    getContractFactory(
      name: "LibNote",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.LibNote__factory>;
    getContractFactory(
      name: "FRAX",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.FRAX__factory>;
    getContractFactory(
      name: "IFRAX",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IFRAX__factory>;
    getContractFactory(
      name: "LibNote",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.LibNote__factory>;
    getContractFactory(
      name: "SCunoro",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.SCunoro__factory>;
    getContractFactory(
      name: "CunoroStaking",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.CunoroStaking__factory>;
    getContractFactory(
      name: "Distributor",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.Distributor__factory>;
    getContractFactory(
      name: "CunoroBondingCalculator",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.CunoroBondingCalculator__factory>;
    getContractFactory(
      name: "NoroFaucet",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.NoroFaucet__factory>;
    getContractFactory(
      name: "CunoroTreasury",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.CunoroTreasury__factory>;
    getContractFactory(
      name: "CunoroAccessControlled",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.CunoroAccessControlled__factory>;
    getContractFactory(
      name: "ERC20",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC20__factory>;
    getContractFactory(
      name: "ERC20Permit",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC20Permit__factory>;
    getContractFactory(
      name: "Governable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.Governable__factory>;
    getContractFactory(
      name: "Guardable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.Guardable__factory>;
    getContractFactory(
      name: "Ownable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.Ownable__factory>;
    getContractFactory(
      name: "VaultOwned",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.VaultOwned__factory>;

    getContractAt(
      name: "CunoroBondDepository",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.CunoroBondDepository>;
    getContractAt(
      name: "BondTeller",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.BondTeller>;
    getContractAt(
      name: "CunoroAuthority",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.CunoroAuthority>;
    getContractAt(
      name: "CunoroERC20Token",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.CunoroERC20Token>;
    getContractAt(
      name: "GNORO",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.GNORO>;
    getContractAt(
      name: "GNOROInterface",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.GNOROInterface>;
    getContractAt(
      name: "GovernorAlpha",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.GovernorAlpha>;
    getContractAt(
      name: "SNOROInterface",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.SNOROInterface>;
    getContractAt(
      name: "TimelockInterface",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.TimelockInterface>;
    getContractAt(
      name: "GovernorNOROegaDelegate",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.GovernorNOROegaDelegate>;
    getContractAt(
      name: "GovernorNOROegaDelegator",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.GovernorNOROegaDelegator>;
    getContractAt(
      name: "GNOROInterface",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.GNOROInterface>;
    getContractAt(
      name: "GovernorAlpha",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.GovernorAlpha>;
    getContractAt(
      name: "GovernorNOROegaDelegateStorageV1",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.GovernorNOROegaDelegateStorageV1>;
    getContractAt(
      name: "GovernorNOROegaDelegatorStorage",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.GovernorNOROegaDelegatorStorage>;
    getContractAt(
      name: "GovernorNOROegaEvents",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.GovernorNOROegaEvents>;
    getContractAt(
      name: "SNOROInterface",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.SNOROInterface>;
    getContractAt(
      name: "TimelockInterface",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.TimelockInterface>;
    getContractAt(
      name: "Timelock",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.Timelock>;
    getContractAt(
      name: "IBondingCalculator",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IBondingCalculator>;
    getContractAt(
      name: "ICunoroAuthority",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ICunoroAuthority>;
    getContractAt(
      name: "IDistributor",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IDistributor>;
    getContractAt(
      name: "IERC20",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC20>;
    getContractAt(
      name: "IERC20Metadata",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC20Metadata>;
    getContractAt(
      name: "IERC20Permit",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC20Permit>;
    getContractAt(
      name: "IgNORO",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IgNORO>;
    getContractAt(
      name: "IGovernable",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IGovernable>;
    getContractAt(
      name: "IGuardable",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IGuardable>;
    getContractAt(
      name: "IJoeERC20",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IJoeERC20>;
    getContractAt(
      name: "IJoeFactory",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IJoeFactory>;
    getContractAt(
      name: "IJoePair",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IJoePair>;
    getContractAt(
      name: "IJoeRouter01",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IJoeRouter01>;
    getContractAt(
      name: "IJoeRouter02",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IJoeRouter02>;
    getContractAt(
      name: "INORO",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.INORO>;
    getContractAt(
      name: "IOracle",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IOracle>;
    getContractAt(
      name: "IOwnable",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IOwnable>;
    getContractAt(
      name: "IsNORO",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IsNORO>;
    getContractAt(
      name: "IStaking",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IStaking>;
    getContractAt(
      name: "IStakingV1",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IStakingV1>;
    getContractAt(
      name: "ITeller",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ITeller>;
    getContractAt(
      name: "ITreasury",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ITreasury>;
    getContractAt(
      name: "ITreasuryV1",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ITreasuryV1>;
    getContractAt(
      name: "IUniswapV2ERC20",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IUniswapV2ERC20>;
    getContractAt(
      name: "IUniswapV2Pair",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IUniswapV2Pair>;
    getContractAt(
      name: "IUniswapV2Router",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IUniswapV2Router>;
    getContractAt(
      name: "IWarmup",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IWarmup>;
    getContractAt(
      name: "IwsNORO",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IwsNORO>;
    getContractAt(
      name: "CrossChainMigrator",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.CrossChainMigrator>;
    getContractAt(
      name: "CunoroTokenMigrator",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.CunoroTokenMigrator>;
    getContractAt(
      name: "IMigrator",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IMigrator>;
    getContractAt(
      name: "LiquidityMigrator",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.LiquidityMigrator>;
    getContractAt(
      name: "AccessControlledMock",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.AccessControlledMock>;
    getContractAt(
      name: "DAI",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.DAI>;
    getContractAt(
      name: "IDAI",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IDAI>;
    getContractAt(
      name: "LibNote",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.LibNote>;
    getContractAt(
      name: "FRAX",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.FRAX>;
    getContractAt(
      name: "IFRAX",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IFRAX>;
    getContractAt(
      name: "LibNote",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.LibNote>;
    getContractAt(
      name: "SCunoro",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.SCunoro>;
    getContractAt(
      name: "CunoroStaking",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.CunoroStaking>;
    getContractAt(
      name: "Distributor",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.Distributor>;
    getContractAt(
      name: "CunoroBondingCalculator",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.CunoroBondingCalculator>;
    getContractAt(
      name: "NoroFaucet",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.NoroFaucet>;
    getContractAt(
      name: "CunoroTreasury",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.CunoroTreasury>;
    getContractAt(
      name: "CunoroAccessControlled",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.CunoroAccessControlled>;
    getContractAt(
      name: "ERC20",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ERC20>;
    getContractAt(
      name: "ERC20Permit",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ERC20Permit>;
    getContractAt(
      name: "Governable",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.Governable>;
    getContractAt(
      name: "Guardable",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.Guardable>;
    getContractAt(
      name: "Ownable",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.Ownable>;
    getContractAt(
      name: "VaultOwned",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.VaultOwned>;

    // default types
    getContractFactory(
      name: string,
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<ethers.ContractFactory>;
    getContractFactory(
      abi: any[],
      bytecode: ethers.utils.BytesLike,
      signer?: ethers.Signer
    ): Promise<ethers.ContractFactory>;
    getContractAt(
      nameOrAbi: string | any[],
      address: string,
      signer?: ethers.Signer
    ): Promise<ethers.Contract>;
  }
}
